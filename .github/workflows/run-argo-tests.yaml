
name: Run Argo Tests

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'argo/**'
    branches:
      - dev
      - main

env:
  GOOGLE_JSON_KEY_PATH: '/home/runner/google-key.json'
  CLUSTER_NAME: 'test-cluster'
  NAMESPACE: 'test'
  SA_NAME: 'test-sa'
  GCS_BUCKET_NAME: 'pixo-test-bucket'

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./argo

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61.0
          install-mode: "goinstall"
          args: --timeout=30m
          working-directory: ./argo

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./argo
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Setup Google Cloud SDK
        run: |
          echo "${GOOGLE_JSON_KEY_CONTENTS}" > ${GOOGLE_JSON_KEY_PATH}
          gcloud auth activate-service-account --key-file=${GOOGLE_JSON_KEY_PATH}
        env:
          GOOGLE_JSON_KEY_CONTENTS: ${{ secrets.GOOGLE_JSON_KEY }}
          GOOGLE_JSON_KEY_PATH: ${{ env.GOOGLE_JSON_KEY_PATH }}

      - name: Init Test Cluster
        run: |
          ../bin/init_test_cluster.sh
          k3d kubeconfig write test-cluster > $HOME/.config/kubeconfig-test-cluster.yaml
        env:
          GOOGLE_JSON_KEY: ${{ env.GOOGLE_JSON_KEY_PATH }}
          CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          NAMESPACE: ${{ env.NAMESPACE }}
          SA_NAME: ${{ env.SA_NAME }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run Tests
        run: |
          go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
        env:
          GOOGLE_JSON_KEY: ${{ secrets.GOOGLE_JSON_KEY_PATH }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_JSON_KEY_PATH }}
          GCS_BUCKET_NAME: ${{ env.GCS_BUCKET_NAME }}
          CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          NAMESPACE: ${{ env.NAMESPACE }}
          SA_NAME: ${{ env.SA_NAME }}

      - name: Check Test Coverage
        run: |
          go install github.com/vladopajic/go-test-coverage/v2@latest
          go-test-coverage -config=./.coverage.yaml
