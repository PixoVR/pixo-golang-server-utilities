
name: Argo Tests

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'argo/**'
    branches:
      - dev
      - main
  push:
    paths:
      - '.github/workflows/argo-tests.yaml'
    branches:
      - pipelines

env:
  GCS_BUCKET_NAME: 'pixo-test-bucket'
  NAMESPACE: 'test'
  SA_NAME: 'test-sa'

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./argo

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61.0
          install-mode: "goinstall"
          args: --timeout=30m
          working-directory: ./argo

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./argo
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: init
        name: Init Cluster
        uses: PixoVR/test-cluster-action@0.0.4
        with:
          argo-events: true
          argo-workflows: true
          gcp-credentials: ${{ secrets.GOOGLE_JSON_KEY }}
          gcs-bucket-name: ${{ env.GCS_BUCKET_NAME }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run Tests
        run: |
          go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
        env:
          NAMESPACE: ${{ steps.init.outputs.namespace }}
          SA_NAME: ${{ steps.init.outputs.sa-name }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.init.outputs.gcp-credentials-file }}
          GOOGLE_JSON_KEY: ${{ steps.init.outputs.gcp-credentials-file }}
          GCS_BUCKET_NAME: ${{ env.GCS_BUCKET_NAME }}

      - name: Check Test Coverage
        run: |
          go install github.com/vladopajic/go-test-coverage/v2@latest
          go-test-coverage -config=./.coverage.yaml
